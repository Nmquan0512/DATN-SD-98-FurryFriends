@model IEnumerable<FurryFriends.API.Models.HoaDon>

@{
    ViewData["Title"] = "Quản lý hóa đơn";
}

<div class="top-bar" style="padding-left: 50px;">
    <h1>@ViewData["Title"]</h1>
    <div class="top-bar-actions">
    </div>
</div>
<nav aria-label="breadcrumb" class="mb-3" style="padding-left: 50px;">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Home" asp-action="Index">Trang chủ</a></li>
        <li class="breadcrumb-item active">Quản lý hóa đơn</li>
    </ol>
</nav>
<div class="row mb-4 g-3">
    <div class="col-md-4">
        <div class="bg-white shadow rounded p-4 border-start border-primary border-4">
            <h6 class="text-muted">Tổng số hóa đơn</h6>
            <h3 class="fw-bold text-primary">@ViewBag.TotalCount</h3>
        </div>
    </div>
    <div class="col-md-4">
        <div class="bg-white shadow rounded p-4 border-start border-success border-4">
            <h6 class="text-muted">Bán tại quầy</h6>
            <h3 class="fw-bold text-success">@ViewBag.BanTaiQuayCount</h3>
        </div>
    </div>
    <div class="col-md-4">
        <div class="bg-white shadow rounded p-4 border-start border-info border-4">
            <h6 class="text-muted">Online</h6>
            <h3 class="fw-bold text-info">@ViewBag.OnlineCount</h3>
        </div>
    </div>
</div>
<div class="container mb-4" id="filterContainer">
    <div class="card shadow-sm p-3 mb-3" style="border-radius: 12px;">
        <div class="row align-items-center mb-2">
            <div class="col-auto">
                <span class="fs-5 fw-semibold"><i class="fas fa-filter me-2"></i>Bộ lọc</span>
            </div>
        </div>
        <div class="row align-items-end g-3">
            <div class="col-md-3">
                <label for="filterTrangThai" class="form-label mb-1">Trạng thái</label>
                <select id="filterTrangThai" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="Chờ xác nhận">Chờ xác nhận</option>
                    <option value="Đã xác nhận">Đã xác nhận</option>
                    <option value="Đang giao">Đang giao</option>
                    <option value="Hoàn thành">Hoàn thành</option>
                    <option value="Đã hủy">Đã hủy</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="filterLoaiHoaDon" class="form-label mb-1">Loại hóa đơn</label>
                <select id="filterLoaiHoaDon" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="BanTaiQuay">Bán tại quầy</option>
                    <option value="BanTrucTiep">Bán trực tiếp</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="filterNgayTu" class="form-label mb-1">Ngày tạo từ</label>
                <input type="date" id="filterNgayTu" class="form-control" />
            </div>
            <div class="col-md-3">
                <label for="filterNgayDen" class="form-label mb-1">Ngày tạo đến</label>
                <input type="date" id="filterNgayDen" class="form-control" />
            </div>
            <div class="col-md-3">
                <label class="form-label mb-1">Khoảng giá</label>
                <div class="price-range-container">
                    <div class="price-range-slider">
                        <input type="range" id="priceMin" min="0" max="10000000" step="50000" value="0">
                        <input type="range" id="priceMax" min="0" max="10000000" step="50000" value="10000000">
                        <div class="price-track" id="priceTrack"></div>
                    </div>
                    <div class="price-values mt-2">
                        <span class="price-value" id="priceMinValue">0đ</span>
                        <span class="price-value float-end" id="priceMaxValue">10,000,000đ</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="table-container table-responsive" id="hoaDonTableContainer" style="margin-left: 10px; margin-right: 40px;">
    <table id="hoaDonTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Mã hóa đơn</th>
                <th>Khách hàng</th>
                <th>Ngày tạo</th>
                <th>Tổng tiền</th>
                <th>Voucher giảm giá</th>
                <th>Thành tiền</th>
                <th>Trạng thái</th>
                <th>Nhân viên tạo</th>
                <th>Loại hóa đơn</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.HoaDonId.ToString().Substring(0, 8).ToUpper()</td>
                    <td>
                        <div>@item.TenCuaKhachHang</div>
                        <small class="text-muted">@item.SdtCuaKhachHang</small>
                    </td>
                    <td>@item.NgayTao.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@item.TongTien.ToString("N0")đ</td>
                    <td>
                        @if (item.Voucher != null)
                        {
                            <span class="badge bg-success">@item.Voucher.TenVoucher</span>
                        }
                        else
                        {
                            <span class="text-muted">Không có</span>
                        }
                    </td>
                    <td>@item.TongTienSauKhiGiam.ToString("N0")đ</td>
                    <td>
                        @switch (item.TrangThai)
                        {
                            case 0:
                                <span class="badge bg-warning text-dark">Chờ xác nhận</span>
                                break;
                            case 1:
                                <span class="badge bg-info text-white">Đã xác nhận</span>
                                break;
                            case 2:
                                <span class="badge bg-primary">Đang giao</span>
                                break;
                            case 3:
                                <span class="badge bg-success">Hoàn thành</span>
                                break;
                            case 4:
                                <span class="badge bg-danger">Đã hủy</span>
                                break;
                            default:
                                <span class="badge bg-secondary">Không xác định</span>
                                break;
                        }
                    </td>
                    <td>
                        @(item.LoaiHoaDon == "BanTaiQuay" ? (item.NhanVien?.HoVaTen ?? "-") : "Được hệ thống tự động tạo")
                    </td>
                    <td>
                        @(item.LoaiHoaDon == "BanTaiQuay" ? "Bán tại quầy" : item.LoaiHoaDon)
                    </td>
                    <td>
                        <div class="d-flex gap-2">
                            <a href="@Url.Action("Details", "HoaDon", new { area = "Admin", id = item.HoaDonId })" class="btn btn-info btn-sm action-btn">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="@Url.Action("ExportPdf", "HoaDon", new { area = "Admin", id = item.HoaDonId })" class="btn btn-success btn-sm action-btn" target="_blank">
                                <i class="fas fa-file-pdf"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    .pet-range-slider input[type=range] {
        -webkit-appearance: none;
        width: 100%;
        background: transparent;
        pointer-events: all;
    }
    .pet-range-slider input[type=range]:focus {
        outline: none;
    }
    .pet-range-slider input[type=range]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 40px;
        height: 40px;
        background: transparent;
        border: none;
        box-shadow: none;
        cursor: pointer;
    }
    .pet-range-slider input[type=range]::-moz-range-thumb {
        width: 40px;
        height: 40px;
        background: transparent;
        border: none;
        box-shadow: none;
        cursor: pointer;
    }
    .pet-range-slider input[type=range]::-ms-thumb {
        width: 40px;
        height: 40px;
        background: transparent;
        border: none;
        box-shadow: none;
        cursor: pointer;
    }
    .pet-range-slider input[type=range]::-webkit-slider-runnable-track {
        height: 8px;
        background: transparent;
    }
    .pet-range-slider input[type=range]::-ms-fill-lower,
    .pet-range-slider input[type=range]::-ms-fill-upper {
        background: transparent;
    }
    /* Hiệu ứng dấu chân động vật giữa 2 pet */
    #petTrack.pet-paw {
        background-image: repeating-linear-gradient(90deg, #4A90E2 0 8px, transparent 8px 16px), url('/images/pawprint.png');
        background-size: 16px 8px, 32px 16px;
        background-repeat: repeat-x;
    }
    
    /* Price Range Slider CSS */
    .price-range-container {
        position: relative;
        padding: 12px 0;
    }
    
    .price-range-slider {
        position: relative;
        height: 44px;
        background: linear-gradient(135deg, #e3f2fd 0%, #ffffff 50%, #e8f5e8 100%);
        border-radius: 22px;
        padding: 0 22px;
        display: flex;
        align-items: center;
        border: 1px solid rgba(116, 194, 245, 0.3);
        box-shadow: 0 2px 8px rgba(116, 194, 245, 0.1);
    }
    
    .price-range-slider input[type=range] {
        -webkit-appearance: none;
        width: 100%;
        background: transparent;
        pointer-events: all;
        position: absolute;
        height: 44px;
        margin: 0;
        padding: 0;
        left: 0;
        top: 0;
    }
    
    .price-range-slider input[type=range]:focus {
        outline: none;
    }
    
    .price-range-slider input[type=range]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 26px;
        height: 26px;
        background: linear-gradient(135deg, #74c2f5 0%, #4facf7 50%, #2196f3 100%);
        border-radius: 50%;
        cursor: pointer;
        border: 3px solid white;
        box-shadow: 0 3px 10px rgba(116, 194, 245, 0.4);
        position: relative;
        z-index: 3;
        transition: all 0.3s ease;
    }
    
    .price-range-slider input[type=range]::-moz-range-thumb {
        width: 26px;
        height: 26px;
        background: linear-gradient(135deg, #74c2f5 0%, #4facf7 50%, #2196f3 100%);
        border-radius: 50%;
        cursor: pointer;
        border: 3px solid white;
        box-shadow: 0 3px 10px rgba(116, 194, 245, 0.4);
        transition: all 0.3s ease;
    }
    
    .price-range-slider input[type=range]::-webkit-slider-runnable-track {
        height: 10px;
        background: linear-gradient(90deg, #e3f2fd 0%, #f0f8ff 100%);
        border-radius: 5px;
    }
    
    .price-range-slider input[type=range]::-moz-range-track {
        height: 10px;
        background: linear-gradient(90deg, #e3f2fd 0%, #f0f8ff 100%);
        border-radius: 5px;
        border: none;
    }
    
    .price-track {
        position: absolute;
        height: 10px;
        background: linear-gradient(90deg, #74c2f5 0%, #4facf7 30%, #2196f3 70%, #1976d2 100%);
        border-radius: 5px;
        top: 50%;
        transform: translateY(-50%);
        z-index: 1;
        transition: all 0.3s ease;
        left: 22px;
        box-shadow: 0 2px 6px rgba(116, 194, 245, 0.3);
    }
    
    .price-values {
        display: flex;
        justify-content: space-between;
        font-size: 0.9em;
        color: #2c5282;
        font-weight: 500;
        margin-top: 4px;
    }
    
    .price-value {
        background: linear-gradient(135deg, #e3f2fd 0%, #ffffff 100%);
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 0.85em;
        color: #2c5282;
        font-weight: 600;
        border: 1px solid rgba(116, 194, 245, 0.2);
        box-shadow: 0 1px 3px rgba(116, 194, 245, 0.1);
    }
    
    /* Hiệu ứng hover */
    .price-range-slider:hover {
        background: linear-gradient(135deg, #e3f2fd 0%, #ffffff 40%, #e8f5e8 100%);
        border-color: rgba(116, 194, 245, 0.5);
        box-shadow: 0 4px 12px rgba(116, 194, 245, 0.2);
    }
    
    .price-range-slider:hover .price-track {
        background: linear-gradient(90deg, #5ab3f0 0%, #3da0f5 30%, #1e88e5 70%, #1565c0 100%);
        box-shadow: 0 3px 8px rgba(116, 194, 245, 0.4);
    }
    
    .price-range-slider input[type=range]:hover::-webkit-slider-thumb {
        background: linear-gradient(135deg, #5ab3f0 0%, #3da0f5 50%, #1e88e5 100%);
        transform: scale(1.1);
        box-shadow: 0 4px 12px rgba(116, 194, 245, 0.5);
    }
    
    .price-range-slider input[type=range]:hover::-moz-range-thumb {
        background: linear-gradient(135deg, #5ab3f0 0%, #3da0f5 50%, #1e88e5 100%);
        transform: scale(1.1);
        box-shadow: 0 4px 12px rgba(116, 194, 245, 0.5);
    }
    
    .price-range-slider input[type=range]:active::-webkit-slider-thumb {
        transform: scale(1.2);
        box-shadow: 0 5px 15px rgba(116, 194, 245, 0.6);
    }
    
    .price-range-slider input[type=range]:active::-moz-range-thumb {
        transform: scale(1.2);
        box-shadow: 0 5px 15px rgba(116, 194, 245, 0.6);
    }
    
    /* Responsive */
    @@media (max-width: 768px) {
        .price-range-container {
            padding: 10px 0;
        }
        
        .price-range-slider {
            height: 40px;
            padding: 0 18px;
        }
        
        .price-range-slider input[type=range] {
            height: 40px;
        }
        
        .price-range-slider input[type=range]::-webkit-slider-thumb {
            width: 22px;
            height: 22px;
        }
        
        .price-range-slider input[type=range]::-moz-range-thumb {
            width: 22px;
            height: 22px;
        }
        
        .price-track {
            left: 18px;
        }
        
        .price-values {
            font-size: 0.8em;
        }
        
        .price-value {
            padding: 3px 8px;
            font-size: 0.75em;
        }
    }
    
    /* Animation cho price values */
    .price-value {
        transition: all 0.3s ease;
    }
    
    .price-value:hover {
        background: linear-gradient(135deg, #d6eaff 0%, #ffffff 100%);
        transform: translateY(-1px);
        box-shadow: 0 2px 6px rgba(116, 194, 245, 0.2);
    }
    
    /* Glow effect khi focus */
    .price-range-slider:focus-within {
        box-shadow: 0 0 0 3px rgba(116, 194, 245, 0.2);
    }
    
    /* Track animation */
    .price-track::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        border-radius: 5px;
        animation: shimmer 2s infinite;
    }
    
    @@keyframes shimmer {
        0% { transform: translateX(-100%); }
        100% { transform: translateX(100%); }
    }

    /* --- CUSTOM: Căn lại slider và bộ lọc đều, thẳng hàng --- */
    .price-range-slider {
        height: 28px;
        border-radius: 14px;
        padding: 0;
        display: flex;
        align-items: center;
        position: relative;
    }
    .price-range-slider input[type=range] {
        height: 28px;
        margin: 0;
        padding: 0;
    }
    .price-range-slider input[type=range]:first-child {
        z-index: 2;
    }
    .price-range-slider input[type=range]:last-child {
        z-index: 3;
    }
    .price-range-slider input[type=range]::-webkit-slider-thumb {
        width: 16px;
        height: 16px;
        margin-top: -5px;
    }
    .price-range-slider input[type=range]::-moz-range-thumb {
        width: 16px;
        height: 16px;
    }
    .price-range-slider input[type=range]::-webkit-slider-runnable-track,
    .price-range-slider input[type=range]::-moz-range-track {
        height: 6px;
        border-radius: 3px;
    }
    .price-track {
        height: 6px;
        border-radius: 3px;
        left: 0 !important;
        width: 100% !important;
        box-shadow: 0 1px 3px rgba(33,150,243,0.08);
    }
    .price-values {
        margin-top: 2px;
        display: flex;
        justify-content: space-between;
    }
    .price-value {
        min-width: 60px;
        text-align: center;
        margin: 0 2px;
        padding: 2px 8px;
        font-size: 0.8em;
        border-radius: 8px;
    }
    /* Bộ lọc thẳng hàng, đều nhau */
    #filterContainer .row.align-items-end.g-3 {
        display: flex;
        align-items: flex-start !important;
        gap: 0 !important;
    }
    #filterContainer .col-md-3 {
        display: flex;
        flex-direction: column;
        align-items: stretch;
        justify-content: flex-start;
        min-width: 180px;
        margin-bottom: 0;
        padding-bottom: 0;
    }
    #filterContainer .form-label {
        min-height: 24px;
        display: flex;
        align-items: flex-end;
        /* Đảm bảo label nằm sát đáy, đều nhau */
    }
    #filterContainer .form-control, 
    #filterContainer .form-select, 
    #filterContainer .price-range-container {
        margin-top: 4px;
    }
    /* --- END CUSTOM --- */
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/2.3.2/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/2.3.2/js/dataTables.bootstrap5.js"></script>
    <script>
        $(document).ready(function () {
            if (window.adminLoading) {
                window.adminLoading.showTableLoading('#hoaDonTableContainer');
            }
            
            var table = $('#hoaDonTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/vi.json',
                    emptyTable: "Không có dữ liệu hóa đơn"
                },
                responsive: true,
                order: [[2, 'desc']],
                columnDefs: [
                    { targets: '_all', defaultContent: '' }
                ],
                initComplete: function () {
                    if (window.adminLoading) {
                        window.adminLoading.hideTableLoading('#hoaDonTableContainer');
                    }
                }
            });
            
            // Fix colspan for empty table row
            $('#hoaDonTable').on('draw.dt', function() {
                var $empty = $('#hoaDonTable tbody td.dt-empty');
                if ($empty.length) {
                    $empty.siblings('td').remove();
                    $empty.attr('colspan', 8);
                }
            });
            
            // Price Range Slider Logic
            const priceMin = document.getElementById('priceMin');
            const priceMax = document.getElementById('priceMax');
            const priceTrack = document.getElementById('priceTrack');
            const priceMinValue = document.getElementById('priceMinValue');
            const priceMaxValue = document.getElementById('priceMaxValue');
            
            function formatPrice(value) {
                return parseInt(value).toLocaleString('vi-VN') + 'đ';
            }
            
            function updatePriceSlider() {
                const min = parseInt(priceMin.value);
                const max = parseInt(priceMax.value);
                const range = parseInt(priceMin.max) - parseInt(priceMin.min);
                const minPercent = ((min - parseInt(priceMin.min)) / range) * 100;
                const maxPercent = ((max - parseInt(priceMin.min)) / range) * 100;
                
                // Đảm bảo min không vượt quá max
                if (min > max) {
                    if (this === priceMin) {
                        priceMin.value = max;
                        return updatePriceSlider();
                    } else {
                        priceMax.value = min;
                        return updatePriceSlider();
                    }
                }
                
                // Cập nhật track (trừ đi padding của slider)
                const sliderWidth = priceTrack.parentElement.offsetWidth - 44; // trừ padding 22px mỗi bên
                priceTrack.style.left = (minPercent * sliderWidth / 100) + 22 + 'px';
                priceTrack.style.width = ((maxPercent - minPercent) * sliderWidth / 100) + 'px';
                
                // Cập nhật giá trị hiển thị
                priceMinValue.textContent = formatPrice(priceMin.value);
                priceMaxValue.textContent = formatPrice(priceMax.value);
                
                // Trigger table filter
                setTimeout(function() {
                    table.draw();
                }, 100);
            }
            
            priceMin.addEventListener('input', updatePriceSlider);
            priceMax.addEventListener('input', updatePriceSlider);
            
            // Khởi tạo slider
            updatePriceSlider();
            
            // Custom search logic
            $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
                // Kiểm tra nếu không phải bảng hoaDonTable thì bỏ qua
                if (settings.nTable.id !== 'hoaDonTable') {
                    return true;
                }
                
                // Kiểm tra dữ liệu có tồn tại không
                if (!data || data.length < 10) {
                    return true;
                }
                
                var trangThai = $('#filterTrangThai').val();
                var loaiHoaDon = $('#filterLoaiHoaDon').val();
                var ngayTu = $('#filterNgayTu').val();
                var ngayDen = $('#filterNgayDen').val();
                
                // Sử dụng Price Range Slider
                var tongTienMin = parseInt($('#priceMin').val()) || 0;
                var tongTienMax = parseInt($('#priceMax').val()) || 10000000;
                
                // Lấy loại hóa đơn từ cột Loại hóa đơn (cột 8)
                var rowLoaiHoaDon = data[8] ? data[8].trim() : '';
                
                try {
                    // Lấy trạng thái từ DOM thay vì data array
                    var $row = $(table.row(dataIndex).node());
                    var rowTrangThai = $row.find('td:eq(6) .badge').text().trim().toLowerCase();
                    var filterTrangThai = trangThai ? trangThai.trim().toLowerCase() : '';
                    
                    // Xử lý ngày tạo
                    var rowNgay = '';
                    if (data[2] && data[2].includes('/')) {
                        rowNgay = data[2].split(' ')[0].split('/').reverse().join('-');
                    }
                    
                    // Xử lý tổng tiền
                    var rowTongTien = 0;
                    if (data[3]) {
                        rowTongTien = parseInt(data[3].replace(/\D/g, '')) || 0;
                    }
                    
                    // Lọc theo trạng thái
                    if (filterTrangThai && rowTrangThai !== filterTrangThai) return false;
                    
                    // Lọc theo loại hóa đơn
                    if (loaiHoaDon && ((loaiHoaDon === 'BanTaiQuay' && rowLoaiHoaDon !== 'Bán tại quầy') || (loaiHoaDon === 'BanTrucTiep' && rowLoaiHoaDon !== 'BanTrucTiep'))) {
                        return false;
                    }
                    
                    // Lọc theo ngày tạo
                    if (ngayTu && rowNgay && rowNgay < ngayTu) return false;
                    if (ngayDen && rowNgay && rowNgay > ngayDen) return false;
                    
                    // Lọc theo tổng tiền
                    if (rowTongTien < tongTienMin || rowTongTien > tongTienMax) return false;
                    
                    return true;
                } catch (e) {
                    console.log('Filter error:', e);
                    return true;
                }
            });
            
            // Event listener cho tất cả filter
            $('#filterTrangThai, #filterLoaiHoaDon, #filterNgayTu, #filterNgayDen').on('change input', function () {
                setTimeout(function() {
                    table.draw();
                }, 100);
            });
            
            // Event listener cho Price Range Slider đã được thêm trong updatePriceSlider function
        });
    </script>
    <link rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.bootstrap5.min.css" />
}