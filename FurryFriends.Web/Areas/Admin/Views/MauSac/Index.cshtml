@model IEnumerable<FurryFriends.API.Models.DTO.MauSacDTO>
@{
    ViewData["Title"] = "Quản lý màu sắc";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container-fluid mt-4">
    <div class="card shadow-sm rounded-3">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h1>@ViewData["Title"]</h1>
            <button class="btn btn-light btn-sm" onclick="openCreate()">
                <i class="bi bi-plus-circle-fill text-success me-1"></i>Thêm mới
            </button>
        </div>

        <div class="card-body p-4">
            <!-- Bộ lọc -->
            <div class="row gy-3 gx-2 mb-4">
                <div class="col-md-4">
                    <input type="text" id="searchInput" class="form-control" placeholder="🔍 Tìm tên màu..." oninput="applyFilter()" />
                </div>
                <div class="col-md-3">
                    <select id="statusFilter" class="form-select" onchange="applyFilter()">
                        <option value="">-- Trạng thái --</option>
                        <option value="true">Hiện</option>
                        <option value="false">Ẩn</option>
                    </select>
                </div>
                <div class="col-md-2 d-grid">
                    <button class="btn btn-outline-primary" onclick="resetFilter()">
                        <i class="bi bi-arrow-counterclockwise me-1"></i>Reset
                    </button>
                </div>
            </div>

            <!-- Bảng -->
            <div class="table-responsive">
                <table class="table table-hover align-middle text-center" id="tblMauSac">
                    <thead class="table-light">
                        <tr>
                            <th style="width:25%">Tên màu</th>
                            <th style="width:15%">Mã màu</th>
                            <th>Mô tả</th>
                            <th style="width:10%">Xem</th>
                            <th style="width:12%">Trạng thái</th>
                            <th style="width:18%">Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-name="@item.TenMau" data-status="@item.TrangThai.ToString().ToLower()">
                                <td class="fw-semibold">@item.TenMau</td>
                                <td>@item.MaMau</td>
                                <td>@item.MoTa</td>
                                <td>
                                    <div style="width:30px;height:30px;border-radius:5px;border:1px solid #ccc;background-color:@item.MaMau"></div>
                                </td>
                                <td>
                                    <span class="badge @(item.TrangThai ? "bg-success" : "bg-secondary")">
                                        @(item.TrangThai ? "Hiện" : "Ẩn")
                                    </span>
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-warning me-1"
                                            onclick="openEdit('@item.MauSacId','@item.TenMau','@item.MaMau','@item.MoTa','@item.TrangThai')">
                                        <i class="bi bi-pencil-fill"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger"
                                            onclick="openDelete('@item.MauSacId','@item.TenMau')">
                                        <i class="bi bi-trash-fill"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- AntiForgeryToken + Modals -->
@Html.AntiForgeryToken()
@await Html.PartialAsync("~/Areas/Admin/Views/MauSac/_CreateMauSacModal.cshtml")
@await Html.PartialAsync("~/Areas/Admin/Views/MauSac/_EditMauSacModal.cshtml")
@await Html.PartialAsync("~/Areas/Admin/Views/MauSac/_DeleteMauSacModal.cshtml")

@section Scripts {
    <script>
        let deleteId = '';

        function openCreate() {
            $('#createForm')[0].reset();
            $('#createForm').removeClass('was-validated');
            $('#CreateMaMau').val('#000000');
            $('#CreateColorPicker').val('#000000');
            $('#createModal').modal('show');
        }

        function submitCreate() {
            const form = $('#createForm')[0];
            if (!form.checkValidity()) {
                form.classList.add('was-validated');
                return;
            }

            const dto = {
                TenMau: $('#CreateTenMau').val(),
                MaMau: $('#CreateMaMau').val(),
                MoTa: $('#CreateMoTa').val(),
                TrangThai: $('#CreateTrangThai').val() === 'true'
            };

            const token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '/Admin/MauSac/Create',
                method: 'POST',
                data: {
                    __RequestVerificationToken: token,
                    ...dto
                },
                headers: { 'X-Requested-With': 'XMLHttpRequest' },
                success: () => {
                    $('#createModal').modal('hide');
                    location.reload();
                },
                error: (xhr) => {
                    alert('❌ Lỗi khi thêm màu sắc!');
                    console.error(xhr.responseText);
                }
            });
        }

        function openEdit(id, ten, ma, mota, trangThai) {
            $('#EditMauSacId').val(id);
            $('#EditTenMau').val(ten);
            $('#EditMaMau').val(ma);
            $('#EditColorPicker').val(ma);
            $('#EditMoTa').val(mota);
            $('#EditTrangThai').val(trangThai.toString());
            $('#editForm').removeClass('was-validated');
            $('#editModal').modal('show');
        }

        function submitEdit() {
            const form = $('#editForm')[0];
            if (!form.checkValidity()) {
                form.classList.add('was-validated');
                return;
            }

            const dto = {
                MauSacId: $('#EditMauSacId').val(),
                TenMau: $('#EditTenMau').val(),
                MaMau: $('#EditMaMau').val(),
                MoTa: $('#EditMoTa').val(),
                TrangThai: $('#EditTrangThai').val() === 'true'
            };

            const token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: `/Admin/MauSac/Edit/${dto.MauSacId}`,
                method: 'POST',
                data: {
                    __RequestVerificationToken: token,
                    ...dto
                },
                headers: { 'X-Requested-With': 'XMLHttpRequest' },
                success: () => {
                    $('#editModal').modal('hide');
                    location.reload();
                },
                error: () => alert('❌ Lỗi khi cập nhật!')
            });
        }

        function openDelete(id, name) {
            deleteId = id;
            $('#delName').text(name);
            $('#deleteModal').modal('show');
        }

        function confirmDelete() {
            const token = $('input[name="__RequestVerificationToken"]').val();
            $.post(`/Admin/MauSac/Delete/${deleteId}`, { __RequestVerificationToken: token }, () => {
                $('#deleteModal').modal('hide');
                location.reload();
            }).fail(() => {
                alert('❌ Lỗi khi xóa!');
            });
        }

        function applyFilter() {
            const txt = $('#searchInput').val().toLowerCase();
            const st = $('#statusFilter').val();
            $('#tblMauSac tbody tr').each(function () {
                const name = $(this).data('name').toLowerCase();
                const status = $(this).data('status');
                const ok = name.includes(txt) && (!st || status === st);
                $(this).toggle(ok);
            });
        }

        function resetFilter() {
            $('#searchInput').val('');
            $('#statusFilter').val('');
            applyFilter();
        }

        // Đồng bộ mã màu <=> color picker
        $('#CreateColorPicker').on('input', function () {
            $('#CreateMaMau').val($(this).val());
        });
        $('#CreateMaMau').on('input', function () {
            $('#CreateColorPicker').val($(this).val());
        });

        $('#EditColorPicker').on('input', function () {
            $('#EditMaMau').val($(this).val());
        });
        $('#EditMaMau').on('input', function () {
            $('#EditColorPicker').val($(this).val());
        });
    </script>
}
