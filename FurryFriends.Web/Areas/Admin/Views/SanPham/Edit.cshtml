@model FurryFriends.Web.ViewModels.SanPhamFullCreateViewModel
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Chỉnh sửa sản phẩm";
    // Chuyển đổi dữ liệu sang JSON để JavaScript sử dụng một cách an toàn
    var kichCoJson = JsonConvert.SerializeObject((ViewBag.KichCoList as SelectList) ?? new SelectList(Enumerable.Empty<SelectListItem>()));
    var mauSacJson = JsonConvert.SerializeObject((ViewBag.MauSacList as SelectList) ?? new SelectList(Enumerable.Empty<SelectListItem>()));
    var chiTietListJson = JsonConvert.SerializeObject(Model.ChiTietList);
}

<div class="top-bar" style="padding-left: 50px;">
    <h1>@ViewData["Title"]</h1>
    <div class="top-bar-actions">
        <a asp-area="Admin" asp-action="Index" asp-controller="SanPham" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Quay lại</a>
    </div>
</div>

<nav aria-label="breadcrumb" class="mb-3" style="padding-left: 50px;">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Trang chủ</a></li>
        <li class="breadcrumb-item"><a asp-area="Admin" asp-action="Index" asp-controller="SanPham">Quản lý sản phẩm</a></li>
        <li class="breadcrumb-item active">Chỉnh sửa</li>
    </ol>
</nav>

<div class="container-fluid" style="padding-left: 50px; padding-right: 50px;">
    <form asp-controller="SanPham" asp-action="Edit" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="SanPham.SanPhamId" />
        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert" style="display: @(ViewData.ModelState.IsValid ? "none" : "block")"></div>

        <!-- Thông tin sản phẩm cơ bản (Giữ nguyên cấu trúc của bạn, chỉ thêm các class cho checkbox) -->
        <div class="card shadow mb-4">
            <div class="card-header"><h5 class="card-title mb-0"><i class="fas fa-box me-2"></i>Thông tin sản phẩm</h5></div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-lg-6 mb-3"><label asp-for="SanPham.TenSanPham" class="form-label"><i class="fas fa-tag me-2"></i>Tên sản phẩm <span class="text-danger">*</span></label><input asp-for="SanPham.TenSanPham" class="form-control" /><span asp-validation-for="SanPham.TenSanPham" class="text-danger small"></span></div>
                    <div class="col-lg-6 mb-3"><label asp-for="SanPham.LoaiSanPham" class="form-label"><i class="fas fa-list me-2"></i>Loại sản phẩm <span class="text-danger">*</span></label><select asp-for="SanPham.LoaiSanPham" class="form-select" onchange="toggleProperties()"><option value="">-- Chọn loại --</option><option value="DoAn">🍽️ Đồ Ăn</option><option value="DoDung">🛠️ Đồ Dùng</option></select><span asp-validation-for="SanPham.LoaiSanPham" class="text-danger small"></span></div>
                    <div class="col-lg-6 mb-3"><label asp-for="SanPham.ThuongHieuId" class="form-label"><i class="fas fa-crown me-2"></i>Thương hiệu <span class="text-danger">*</span></label><select asp-for="SanPham.ThuongHieuId" class="form-select" asp-items="ViewBag.ThuongHieuList"><option value="">-- Chọn thương hiệu --</option></select><span asp-validation-for="SanPham.ThuongHieuId" class="text-danger small"></span></div>
                    <div class="col-lg-6 mb-3 d-flex align-items-center"><div class="form-check form-switch mt-3"><input asp-for="SanPham.TrangThai" class="form-check-input" type="checkbox" /><label class="form-check-label fw-semibold" asp-for="SanPham.TrangThai"><i class="fas fa-toggle-on me-2"></i>Đang hoạt động</label></div></div>
                </div>

                <div id="thanhPhanSection" class="mt-4">
                    <div class="card border-0 bg-light p-3">
                        <h6 class="mb-3 fw-semibold"><i class="fas fa-leaf text-success me-2"></i>Thành phần</h6><div class="row g-3" style="max-height: 200px; overflow-y: auto;">
                            @foreach (var thanhPhan in ViewBag.ThanhPhanList as List<SelectListItem> ?? new List<SelectListItem>())
                            {
                                var isSelected = Model.SanPham.ThanhPhanIds?.Contains(Guid.Parse(thanhPhan.Value)) ?? false;
                                <div class="col-md-6 col-lg-4">
                                    <div class="form-check">
                                        <input class="form-check-input check-thanhphan" type="checkbox" name="SanPham.ThanhPhanIds" value="@thanhPhan.Value" id="thanhPhan_@thanhPhan.Value" @(isSelected ? "checked" : "") />
                                        <label class="form-check-label" for="thanhPhan_@thanhPhan.Value">@thanhPhan.Text</label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div id="chatLieuSection" class="mt-4">
                    <div class="card border-0 bg-light p-3">
                        <h6 class="mb-3 fw-semibold"><i class="fas fa-cube text-warning me-2"></i>Chất liệu</h6><div class="row g-3" style="max-height: 200px; overflow-y: auto;">
                            @foreach (var chatLieu in ViewBag.ChatLieuList as List<SelectListItem> ?? new List<SelectListItem>())
                            {
                                var isSelected = Model.SanPham.ChatLieuIds?.Contains(Guid.Parse(chatLieu.Value)) ?? false;
                                <div class="col-md-6 col-lg-4">
                                    <div class="form-check">
                                        <input class="form-check-input check-chatlieu" type="checkbox" name="SanPham.ChatLieuIds" value="@chatLieu.Value" id="chatLieu_@chatLieu.Value" @(isSelected ? "checked" : "") />
                                        <label class="form-check-label" for="chatLieu_@chatLieu.Value">@chatLieu.Text</label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Biến thể sản phẩm -->
        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0"><i class="fas fa-layer-group me-2"></i>Biến thể sản phẩm</h5>
                <button type="button" class="btn btn-success btn-sm" id="addVariantBtn"><i class="fas fa-plus me-2"></i>Thêm biến thể</button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light"><tr><th>Kích cỡ <span class="text-danger">*</span></th><th>Màu sắc <span class="text-danger">*</span></th><th>Giá bán <span class="text-danger">*</span></th><th>Số lượng <span class="text-danger">*</span></th><th>Mô tả</th><th>Ảnh</th><th></th></tr></thead>
                        <tbody id="chiTietBody"></tbody>
                    </table>
                </div>
                <div id="variantError" class="text-danger small mt-2"></div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="d-flex justify-content-end gap-2">
            <a asp-area="Admin" asp-action="Index" asp-controller="SanPham" class="btn btn-secondary"><i class="fas fa-times me-2"></i>Hủy</a>
            <button type="submit" class="btn btn-primary"><i class="fas fa-save me-2"></i>Lưu thay đổi</button>
        </div>
    </form>
</div>

<!-- Modal chọn ảnh (giữ nguyên) -->
<div class="modal fade" id="anhModal" tabindex="-1"><div class="modal-dialog modal-lg"><!-- ... --></div></div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const chiTietBody = document.getElementById('chiTietBody');
            const form = document.querySelector('form');
            let currentAnhBtn = null;

            const kichCoOptionsData = @Html.Raw(kichCoJson);
            const mauSacOptionsData = @Html.Raw(mauSacJson);
            const existingChiTietData = @Html.Raw(chiTietListJson);

            function generateOptions(data, placeholder, selectedValue = '') {
                let optionsHtml = `<option value="">-- ${placeholder} --</option>`;
                data.forEach(item => {
                    const isSelected = item.Value === selectedValue.toString() ? 'selected' : '';
                    optionsHtml += `<option value="${item.Value}" ${isSelected}>${item.Text}</option>`;
                });
                return optionsHtml;
            }

            function addChiTietRow(chiTietData = null) {
                const currentIndex = chiTietBody.rows.length;
                const newRow = chiTietBody.insertRow();

                // Dùng dữ liệu có sẵn (khi edit) hoặc giá trị mặc định (khi thêm mới)
                const sanPhamChiTietId = chiTietData?.SanPhamChiTietId || '';
                const kichCoId = chiTietData?.KichCoId || '';
                const mauSacId = chiTietData?.MauSacId || '';
                const giaBan = chiTietData?.GiaBan || 0;
                const soLuong = chiTietData?.SoLuongTon || 0;
                const moTa = chiTietData?.MoTa || '';
                const anhId = chiTietData?.AnhId || '';
                const duongDan = chiTietData?.DuongDan || '';

                const kichCoOptions = generateOptions(kichCoOptionsData, 'Chọn kích cỡ', kichCoId);
                const mauSacOptions = generateOptions(mauSacOptionsData, 'Chọn màu sắc', mauSacId);
                const anhPreview = duongDan ? `<img src="https://localhost:7289${duongDan}" style="max-width:60px;max-height:60px;object-fit:cover;" class="rounded shadow-sm" />` : '';

                newRow.innerHTML = `
                    <input type="hidden" name="ChiTietList[${currentIndex}].SanPhamChiTietId" value="${sanPhamChiTietId}" />
                    <td><select name="ChiTietList[${currentIndex}].KichCoId" class="form-select form-select-sm" required>${kichCoOptions}</select></td>
                    <td><select name="ChiTietList[${currentIndex}].MauSacId" class="form-select form-select-sm" required>${mauSacOptions}</select></td>
                    <td><div class="input-group input-group-sm"><input name="ChiTietList[${currentIndex}].GiaBan" type="number" class="form-control" value="${giaBan}" min="0" required /><span class="input-group-text">VNĐ</span></div></td>
                    <td><input name="ChiTietList[${currentIndex}].SoLuongTon" type="number" class="form-control form-control-sm" value="${soLuong}" min="0" required /></td>
                    <td><input name="ChiTietList[${currentIndex}].MoTa" class="form-control form-control-sm" value="${moTa}" /></td>
                    <td>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="openAnhModal(this)"><i class="fas fa-image"></i></button>
                        <input type="hidden" name="ChiTietList[${currentIndex}].AnhId" value="${anhId}" />
                        <div class="anh-preview mt-1">${anhPreview}</div>
                    </td>
                    <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)" title="Xóa biến thể"><i class="fas fa-trash"></i></button></td>
                `;
            }

            function updateRowIndexes() {
                const rows = chiTietBody.querySelectorAll('tr');
                rows.forEach((row, newIndex) => {
                    row.querySelectorAll('input, select').forEach(input => {
                        const oldName = input.getAttribute('name');
                        if (oldName) {
                            input.setAttribute('name', oldName.replace(/\[\d+\]/, `[${newIndex}]`));
                        }
                    });
                });
            }

            window.removeRow = function(btn) {
                if (confirm('Bạn có chắc chắn muốn xóa biến thể này?')) {
                    btn.closest('tr').remove();
                    updateRowIndexes();
                }
            }

            // CÁC HÀM KHÁC GIỮ NGUYÊN
            window.openAnhModal = function(btn) { currentAnhBtn = btn; new bootstrap.Modal(document.getElementById('anhModal')).show(); };
            window.selectAnh = function(img) { /* ... code của bạn ... */ };
            window.toggleProperties = function () { /* ... code của bạn ... */ };

            // HÀM ĐỂ LOAD CÁC BIẾN THỂ ĐÃ CÓ
            function loadExistingVariants() {
                existingChiTietData.forEach(variant => {
                    addChiTietRow(variant);
                });
                // Kích hoạt lại validation sau khi đã thêm tất cả
                $(form).removeData("validator").removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse(form);
            }

            // CÁC THIẾT LẬP BAN ĐẦU
            document.getElementById('addVariantBtn').addEventListener('click', () => addChiTietRow(null));
            form.addEventListener('submit', (e) => {
                if (chiTietBody.rows.length === 0) {
                    document.getElementById('variantError').textContent = "Phải có ít nhất một biến thể.";
                    e.preventDefault();
                } else {
                    document.getElementById('variantError').textContent = "";
                }
            });

            // Khởi tạo trạng thái và dữ liệu ban đầu
            toggleProperties();
            loadExistingVariants();
        });
    </script>
}